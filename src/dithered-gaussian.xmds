<simulation xmds-version="2">
  <name>dithered-gaussian</name> <!-- name of compiled executable-->
  <author>Patrick Gleeson</author>
  <description>1-dimensional 2-level gradient echo memory simulation which solves the 2-level Maxwell-Bloch equations in the strong-control weak-probe field regime (original code by Jesse).

  This file: cosine-dithered Gaussian input pulse, in a linear control field
  which reverses after tswitch.
  </description>
<features>
  <benchmark /> <!-- Each simulation will report its runtime -->
  <bing /> <!-- Make an annoying sound when the simulation finishes -->
  <globals>
    <![CDATA[
    const double pi = M_PI;
    double agamma = pi; 		/* excited state coherence decay (half the excited state linewidth, set to pi means all frequencies in terms of linewidth */

    const double delta = 2*pi*40;  		/* one-photon detuning*/
    //double od;		/*optical depth*/ 
    double omega;		/*control field rabi frequency*/
    double eta;   		/*operator for gradient*/
    double t_switch; /* Time at which gradient reverses */
    double dither_amp;
    double dither_freq;
    double pulse_width;

    real gradientswitch(double time) {
      if (time < t_switch) {
        return 1.0; 
      } else {
        return -1.0;
      }
    }

    double dithered_gaussian( double x, double w ) {
      if (abs(x) < w) {
        return exp( -2 * pow(x,2) / pow(w,2) ) + dither_amp * cos( dither_freq * x);
      } else {
        return exp( -2 * pow(x,2) / pow(w,2) );
      }
    }
    ]]>
  </globals>
  <arguments append_args_to_output_filename="no">
    <argument default_value= "5" name = "tswitch" type = "real" />
    <argument default_value= "1" name = "bandwidth" type = "real" />
    <argument default_value= "5" name = "omega_in" type = "real" />
    <argument default_value= "400" name = "od" type = "real" />
    <argument default_value= "3" name = "tin" type = "real" />
    <argument default_value= "1.2" name = "pulsewidth" type = "real" />
    <!-- dithering amplitude-->
    <argument default_value= "0.3" name = "ditheramp" type = "real" />
    <!-- dithering frequency-->
    <argument default_value= "6.3" name = "ditherfreq" type = "real" />
    <![CDATA[
    omega = 2*pi*omega_in;
    t_switch = tswitch;
    dither_amp = ditheramp;
    dither_freq = ditherfreq;
    ]]>
  </arguments>
</features>
<geometry>
  <propagation_dimension>t</propagation_dimension>
    <transverse_dimensions>
      <dimension domain="(-0.5, 0.5)" lattice="700" name="z" />
    </transverse_dimensions>
</geometry>

<vector initial_space="z" name="spinwave" type="complex">
  <components>S</components>
</vector>

<vector initial_space="z" name="probe" type="complex">
  <components>E</components>
</vector>

<sequence>
  <integrate algorithm="ARK45" interval="16" steps="200" tolerance="1.0e-6">
  <samples>300</samples>
  
  <operators>   
    <operator kind="functions">
      <![CDATA[
      eta = 2*pi*bandwidth * gradientswitch(t);
      ]]>
    </operator>
             
    <operator algorithm="RK4" kind="cross_propagation" propagation_dimension="z">
      <integration_vectors> probe </integration_vectors>
      <dependencies>spinwave</dependencies>
      <boundary_condition kind="left">
        <![CDATA[
        E= dithered_gaussian(t-tin,pulsewidth);
        ]]>
      </boundary_condition>
        <![CDATA[
        dE_dz = i * sqrt(od) * omega * S / delta;
        ]]>
    </operator>

    <integration_vectors>spinwave</integration_vectors>
      <![CDATA[
      dS_dt = i * (eta * z * S + sqrt(od) * agamma * omega * E / delta);
      ]]>
  </operators>
  </integrate>
</sequence>

<output filename="dithered-gaussian" format="hdf5">
  <group>
  <sampling basis="z" initial_sample="yes">
    <moments>SR SI ER EI</moments> <!-- Desired output variables-->
    <dependencies>probe spinwave</dependencies>
    <![CDATA[
    _SAMPLE_COMPLEX(S);
    _SAMPLE_COMPLEX(E);
    ]]>
  </sampling>
  </group>
</output>
</simulation>